const { Expo } = require('expo-server-sdk');
// Create a new Expo SDK client
let expo = new Expo();

Parse.Cloud.define('ping', async (request) => {
  console.log('llego el ping!');
  return { pong: 'ok' };
});

Parse.Cloud.beforeSave('PushToken', async (request) => {
  const { object: pushToken, user } = request;

  const query = new Parse.Query('PushToken');
  query.equalTo('token',pushToken.get('token'));
  query.equalTo('user', user);
  const count = await query.count();

  if(count > 0 ) throw new Error('Token for User already exists.')
});


Parse.Cloud.afterSave('News', async (request) => {
  const { object: news, original } = request;
  
  // check if object is new
  if (!original){
    const query = new Parse.Query('PushToken');
    const pushTokens = await query.find({ useMasterKey: true });

    const title = news.get('title');

    let messages = [];
    for (let pushToken of pushTokens) {
      const token = pushToken.get("token");
      // Each push token looks like ExponentPushToken[xxxxxxxxxxxxxxxxxxxxxx]
      // Check that all your push tokens appear to be valid Expo push tokens
      if (!Expo.isExpoPushToken(token)) {
        console.error(`Push token ${token} is not a valid Expo push token`);
        continue;
      }

      // Construct a message (see https://docs.expo.io/versions/latest/guides/push-notifications.html)
      messages.push({
        to: token,
        sound: 'default',
        body: `No te lo pierdas: ${title}`,
        data: { withSome: 'data' },
      });
    };

    console.log(messages);
    let chunks = expo.chunkPushNotifications(messages);

    let tickets = [];
    (async () => {
      // Send the chunks to the Expo push notification service. There are
      // different strategies you could use. A simple one is to send one chunk at a
      // time, which nicely spreads the load out over time:
      for (let chunk of chunks) {
        try {
          let ticketChunk = await expo.sendPushNotificationsAsync(chunk);
          console.log(ticketChunk);
          tickets.push(...ticketChunk);
          // NOTE: If a ticket contains an error code in ticket.details.error, you
          // must handle it appropriately. The error codes are listed in the Expo
          // documentation:
          // https://docs.expo.io/versions/latest/guides/push-notifications#response-format
        } catch (error) {
          console.error(error);
        }
      }
    })();

    // check if object is new
    // if (!original){
    //   const title = news.get('title');
    //   const notification = await expo.sendPushNotificationsAsync([{
    //     to: 'ExponentPushToken[LqqwnAExpPx3EN0uXUxZlI]',
    //     sound: 'default',
    //     body: `No te lo pierdas: ${title}`,
    //     data: { withSome: 'data' },
    //   }]);
    //   // console.log(notification);
    // }
  }
});

// Parse.Cloud.beforeSave('News', async (req  ) => {
//   console.log(res);
//   throw new Parse.Error(404, 'error');
// });
